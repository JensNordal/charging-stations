"use strict";angular.module("chargingStationsApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngStorage","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/contact",{templateUrl:"views/contact.html",controller:"MyCtrl",controllerAs:"contact"}).otherwise({redirectTo:"/"})}]),angular.module("chargingStationsApp").controller("MainCtrl",["$scope","current","$localStorage",function(a,b,c){a.current=b.query(),a.storage=c,a.refreshCurrent=function(){a.current=b.query({location:a.location}),a.saveCity=function(b){console.log("savingCity: "+b);var d={city:b};if(c.savedCities){for(var e=!0,f=0;f<c.savedCities.length;f++)c.savedCities[f].city===d.city&&(e=!1);e===!0?(c.savedCities.push(d),a.citySaved={success:!0}):(console.log("city already saved: "+d.city),a.citySaved={duplicate:!0})}else c.savedCities=[d]}}}]),angular.module("chargingStationsApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("ngMap").controller("ContactCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("chargingStationsApp").factory("current",["$resource",function(a){return a("https://developer.nrel.gov/api/alt-fuel-stations/v1/nearest.json?location=:location&fuel_type=ELEC&api_key=aPpj2Zmtm21V9j4douZuoEtDCNKpdxddl811Rk8a",{},{query:{method:"GET",params:{location:""},isArray:!1}})}]),app.controller("ngMap",["NgMap",function(a){a.getMap().then(function(a){console.log(a.getCenter()),console.log("markers",a.markers),console.log("shapes",a.shapes)})}]),angular.module("chargingStationsApp").run(["$templateCache",function(a){a.put("views/about.html",'<p class="about">This electric vehicle charging station finder was created by <a href="http://jensnordal.com">Jens Nordal</a> as part of <a href="http://webdev.seattleu.edu/">Seattle University\'s Web Development</a> certificate program and accesses the <a href="http://nrel.gov">US National Renewable Energy Laboratory\'s</a> database. </p>'),a.put("views/contact.html",'<div ng-app="ngMap"> <style>#map {\n        height: 400px;\n        width: 100%;\n       }</style> <script>angular.module(\'ngMap\').controller(\'ngMap\', function() {\n    var vm=this;\n    vm.data =[\n      {foo:1, bar:1},\n      {foo:2, bar:2},\n      {foo:3, bar:3},\n      {foo:4, bar:4},\n      {foo:5, bar:5},\n      {foo:6, bar:6},\n      {foo:7, bar:7}\n    ];\n    vm.positions =[\n      {pos:[40.71, -74.21]},\n      {pos:[40.72, -74.20]},\n      {pos:[40.73, -74.19]},\n      {pos:[40.74, -74.18]},\n      {pos:[40.75, -74.17]},\n      {pos:[40.76, -74.16]},\n      {pos:[40.77, -74.15]}\n    ];\n    vm.showData = function() {\n      alert(this.data.foo);\n    }\n  });</script> <div ng-controller="MyCtrl as vm"> <ng-map zoom="11" center="[40.74, -74.18]"> <marker ng-repeat="p in vm.positions" position="{{p.pos}}" data="{{data[$index]}}" on-click="showData()" title="pos: {{p.pos}}"> </marker> </ng-map> </div> </div>'),a.put("views/main.html",'<div ng-app class="jumbotron" ng-controller="MainCtrl"> <h1>Find Charging Stations Near {{current.fuel_stations[0].city}}</h1> <p class="lead"> <div ng-init="location=\' City or ZIP\'"> <form> <p> <label for="location">Location: <input type="text" name="location" ng-model="location"> </label> </p> <p> <button class="btn btn-lg btn-primary" ng-click="refreshCurrent()" type="submit">Find a Charging Station</button> </p> </form> <br> <div ng-hide="current.total_results == null"> <dt>Total Stations (within 5 mi.):</dt> <dd>{{current.total_results}}</dd> <br> </div> <br> <dl ng-repeat="station in current.fuel_stations"> <div class="stationName" ng-hide="station.station_name === null"> <dd>{{station.station_name}}</dd> <br> </div> <div ng-hide="station.street_address === null"> <dt>Address</dt> <dd>{{station.street_address}}</dd> <dd>{{station.city}}, {{station.state}} {{station.zip}} {{station.plus4}}</dd> <br> </div> <div ng-hide="station.intersection_directions === null"> <dd>{{station.intersection_directions}}</dd> <br> </div> <div ng-hide="station.station_phone === null"> <dt>Phone Number</dt> <dd>{{station.station_phone}}</dd> <br> </div> <div ng-hide="station.access_days_time === null"> <dt>Hours</dt> <dd>{{station.access_days_time}}</dd> <br> </div> <div ng-hide="station.groups_with_access_code === null"> <dt>Availability <small>(Public/Private)</small></dt> <dd>{{station.groups_with_access_code}}</dd> <br> </div> <div ng-hide="station.ev_network === null"> <dt>Network</dt> <dd><a ng-href="{{station.ev_network_web}}">{{station.ev_network}}</a></dd> <br> </div> <div ng-hide="station.ev_connector_types === null"> <dt>Connector Type</dt> <dd>{{station.ev_connector_types[0]}}</dd> <dd>{{station.ev_connector_types[1]}}</dd> <dd>{{station.ev_connector_types[2]}}</dd> <dd>{{station.ev_connector_types[3]}}</dd> <dd>{{station.ev_connector_types[4]}}</dd> <dd>{{station.ev_connector_types[5]}}</dd> <dd>{{station.ev_connector_types[6]}}</dd> <br> </div> <br> </dl> </div> <div> <p> <button id="AlertBtn" class="btn btn-sm btn-primary" ng-hide="current.fuel_stations[0].city == null" ng-click="saveCity(current.fuel_stations[0].city)">Save {{current.fuel_stations[0].city}}</button> </p> </div> <!-- !!!!! TODO: Update so \'City Saved\'/\'City Already Saved\' refreshes for each new city search. !!!!!--> <div ng-messages="citySaved"> <p class="city-saved-alert bg-success text-success" ng-message="success"> {{current.fuel_stations[0].city}} has been saved to your list of cities. </p> <p class="city-saved-alert bg-warning text-warning" ng-message="duplicate"> {{current.fuel_stations[0].city}} has already been saved to your list of cities. </p> </div> </p></div> <div ng-if="storage.savedCities" class="saved-cities-list"> <h2>Saved Cities</h2> <ul class="saved-cities-list"> <li ng-repeat="city in storage.savedCities"> <a ng-href="/charging-stations/#/{{city.city}}" id="savedBtn">{{city.city}}</a> </li> </ul> </div> <br> <!--\n\n<div ng-app="myApp" ng-strict-di class="map-container">\n  <script>\n'+"  var app = angular.module('myApp', ['ngMap']);\n\n  app.controller('mapController', function($http, $timeout, StreetView, NgMap) {\n    var vm = this;\n    vm.stores = [];\n    NgMap.getMap().then(function(evtMap) {\n      map = evtMap;\n      vm.map = map;\n      console.log('loading json data');\n      $http.get('scripts/stations.json').then(function(resp) {\n        console.log('stores', stores);\n        var stores = resp.data;\n        for (var i=0; i<stores.length; i++) {\n          var store = stores[i];\n          store.position = new google.maps.LatLng(store.latitude,store.longitude);\n          store.title = store.name;\n          var marker = new google.maps.Marker(store);\n          vm.stores.push(marker);\n        }\n        console.log('finished loading json data', 'vm.stores', vm.stores.length);\n        vm.markerClusterer = new MarkerClusterer(map, vm.stores, {});\n      }, function(err) { console.log('err', err)});\n    });\n  });\n\n  app.directive('fullScreenToggle', function($timeout) {\n    return {\n      controller: 'mapController',\n      link: function(scope, e, a, ctrl) {\n        var fullScreenClick = function() {\n          e.parent().toggleClass('full-screen');\n          e.text( e.parent().hasClass('full-screen') ? 'Exit Full Screen' : 'Full Screen' );\n          google.maps.event.trigger(scope.map, 'resize');\n        };\n        e.on('click', fullScreenClick);\n        $timeout(function() {\n          fullScreenClick();\n        }, 1000);\n      }\n    }\n  });\n\n  </script>\n  <style>\n    div#map-container {width: 600px; height: 400px; position: relative; color: rgb(86, 86, 86); font-family: Roboto, Arial, sans-serif; -webkit-user-select: none; font-size: 11px; }\n    div#map-container div.custom-control { z-index: 1; direction: ltr; overflow: hidden; text-align: center; padding: 1px 6px; border-bottom-right-radius: 2px; border-top-right-radius: 2px; -webkit-background-clip: padding-box; border-width: 1px 1px 1px 0px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgba(0, 0, 0, 0.14902); border-right-color: rgba(0, 0, 0, 0.14902); border-bottom-color: rgba(0, 0, 0, 0.14902); -webkit-box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; min-width: 41px; background-color: rgb(255, 255, 255); background-clip: padding-box; }\n\n    div#map-container.full-screen {position:absolute; display:block; width:100%; height:100%; top: 0; left: 0}\n    div#map-container div[full-screen-toggle] { cursor: pointer; position: absolute; top: 5px; right: 100px; }\n    ng-map {display:block; width:100%; height:100%;}\n  </style>\n\n--> <h1>Map container</h1> <hr> <div id=\"map-container\" ng-controller=\"mapController as vm\"> <ng-map default-style=\"false\" zoom=\"2\" center=\"[45.518970, -122.672899]\"> </ng-map> <div full-screen-toggle class=\"custom-control\">Full Screen</div> </div>  <!--    <script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD7nRKQKvGGlKpk0bMyevwC3O1HfVslUEo&libraries=geometry,places,drawing\">\n    </script>\n--> <!--    <div id=\"map-canvas\" style=\"height: 600px; width: 600px;\"></div>\n\n    <script>\n      var positionToStationLatlng = function(position) {\n        return position.coords.latitude + ',' + position.coords.longitude;\n      };\n      var positionToGoogleLatLng = function(position) {\n        return new google.maps.LatLng(\n          position.coords.latitude,\n          position.coords.longitude\n        );\n      };\n      var storeToGoogleLatLng = function(store) {\n        return new google.maps.LatLng(\n          store.store.coordinates.latitude,\n          store.store.coordinates.longitude\n        );\n      };\n      var drawStoresMap = function(position, storesData) {\n        var map = new google.maps.Map(document.getElementById('map-canvas'), {\n          center: positionToGoogleLatLng(position),\n          zoom: 12\n        });\n        for (var i = 0; i < stationData.stations.length; i++) {\n          drawMarker(map, stationData.stations[i]);\n        }\n      };\n      var drawMarker = function(map, store) {\n        var marker = new google.maps.Marker({\n          map: map,\n          position: stationToGoogleLatLng(store),\n          title: station.station.name\n        });\n      };\n      $(document).ready(function() {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          $.ajax({\n            url: 'https://developer.nrel.gov/api/alt-fuel-stations/v1/nearest.json?location=:location&fuel_type=ELEC&api_key=aPpj2Zmtm21V9j4douZuoEtDCNKpdxddl811Rk8a',\n            headers: {\n              'Accept': 'application/json'\n            },\n            data: {\n              radius: 10,\n              latlng: positionToStationLatlng(position)\n            },\n            success: function(storesData) {\n              drawStoresMap(position, stationData);\n            }\n          });\n        });\n      });\n    </script>\n--> <!-- !!!!! TODO:  SCROLL TO TOP !!!!!\n<a class=\"cd-top\" ng-href=\"/charging-stations/#/{{city.city}}\">Back to Top</a>\n<br>\n-->")}]);